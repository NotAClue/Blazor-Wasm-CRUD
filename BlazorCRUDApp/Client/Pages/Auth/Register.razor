@page "/register"
@inject HttpClient http
@inject ILoginService  loginService
@inject NavigationManager navigationManager

@using BlazorCRUDApp.Client.Auth

<h3>Register</h3>

<EditForm Model="userInfo" OnValidSubmit="CreateUser">
    <DataAnnotationsValidator />
    @if (showMessage)
    {
        <div class="alert alert-danger">@message</div>
    }

    <div class="form-group">
        <label>Email:</label>
        <div>
            <InputText class="form-control" @bind-Value="@userInfo.Email" />
            <ValidationMessage For="@(() => userInfo.Email)" />
        </div>
    </div>

    <div class="form-group">
        <label>Password:</label>
        <div>
            <InputPassword class="form-control" @bind-Value="@userInfo.Password" />
            <ValidationMessage For="@(() => userInfo.Password)" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Register</button>

</EditForm>

@code {
    private UserInfo userInfo = new UserInfo();
    private string message = "No Message";
    private bool showMessage = false;

    async Task CreateUser()
    {
        try
        {
            var result = await http.PostJsonAsync<UserToken>("api/accounts/create", userInfo);
            await loginService.Login(result.Token);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            showMessage = true;
            message = ex.Message;
        }
    }
}
